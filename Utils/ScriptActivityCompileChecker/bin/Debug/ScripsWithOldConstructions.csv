AEB1C030-67FA-4496-B9B9-C1DF1E7CDE6C	[Взаимодействие с банком]->[Процессы]->[Загрузка б.отчета об оборотах д.средств]->{формирование уведомлений}	nd").Gt(0m);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      var bAccountSrc = query.JoinSource(query.So	B45ED0AB-EAC7-47E0-A41B-3920A4CCE511	1	1
80FE042B-AB78-4D85-B3C1-A8C6CD69F130	[Взаимодействие с банком]->[Процессы]->[Загрузка банковских номеров]->{Считывание банковских счетов}	                  var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);          query.AddAttribute("Activity");        	828947AE-44B6-4ECE-ADE3-E6DFA63D3FE0	1	1
6AA21A2E-4FA9-4885-8B76-49CAB535E06B	[Выплаты АСП]->[Процессы]->[***Печать банковского реестра на прекращение выплат]->{Скрипт}	Id);              var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);                            /*var notTermSrc = qu	9A8C0BB4-8763-46AA-9B26-38385D7E65D3	1	1
1F0340ED-2AE2-4B69-8D5C-B7C74B3FA9F0	[Заявление на АСП]->[Процессы]->[***Создание умершего человека]->{поиск заявлений}	LL") <= 222;      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      var appstatesrc = query.JoinSource(query.So	DF0270AF-A5CF-4B20-A1F6-5711C1962CA2	1	1
4E094E67-47A9-4683-AB31-415AE515FC86	[Заявление на АСП]->[Процессы]->[***Создание умершего человека]->{Прекращение}	).Eq(appId);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("&Id");      using(var r	DF0270AF-A5CF-4B20-A1F6-5711C1962CA2	1	1
DB614159-54AB-4390-8846-ADF69BB7F7CB	[Заявление на АСП]->[Процессы]->[***Создание умершего человека]->{проверка на остаток выплат}	Date).End();      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("BalanceEnd");      quer	DF0270AF-A5CF-4B20-A1F6-5711C1962CA2	1	3
E58A7803-75EE-434E-951E-A86BB602AEC5	[Заявление на АСП]->[Процессы]->[Верификация]->[Отчет по ходу выполнения планов проверки]->{Скрипт}	eId);              // query = SqlQueryBuilder.Build(context.DataContext, qb.Def);              query = sqlQueryBuilder.Build(qb.De	D670CBC5-4F89-4891-BA1C-C4D001863023	1	1
3CF0EA52-81F6-4E30-B668-EBC0C228837B	[Заявление на АСП]->[Процессы]->[Верификация]->[Сформировать список заявлений для верификации]->[Скрипт]	ext.CreateSqlQuery(qb.Def)) //SqlQueryBuilder.Build(context.DataContext, qb.Def);      {          query.AddAttribute("Value");    	41E4F4B6-6B27-4679-A77F-6E39E7D2618C	1	1
0E8A2B3F-CA3A-4A35-89BC-F876388E54E0	[Заявление на АСП]->[Процессы]->[Верификация]->[Сформировать список заявлений для верификации]->{Запрос на заявления}	ext.CreateSqlQuery(qb.Def)) //SqlQueryBuilder.Build(context.DataContext, qb.Def);              {                  query.AddAttribu	41E4F4B6-6B27-4679-A77F-6E39E7D2618C	1	2
380B6947-829D-48CF-91E7-4FB3C007E204	[Заявление на АСП]->[Процессы]->[Создание умершего человека]->[Поиск заявлений]	ext)).End();      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      var appstatesrc = query.JoinSource(query.So	11966693-234C-43DF-B674-ACFD7A73352A	1	1
39AA7195-076D-4074-ADE0-DE7A70C34D33	[Заявление на АСП]->[Процессы]->[Создание умершего человека]->[Проверка на остаток выплаты]	Date).End();      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("BalanceEnd");      quer	11966693-234C-43DF-B674-ACFD7A73352A	1	3
695B2612-037D-4B38-9771-E5C0BB9A5241	[Заявление на АСП]->[Процессы]->[Создание умершего человека]->{Прекращение}	).Eq(appId);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("&Id");      using(var r	11966693-234C-43DF-B674-ACFD7A73352A	1	1
63BA7AD9-DF26-42F4-B9D3-08AEAE8BE3EE	[Заявление на АСП]->[Процессы]->[Создать заявление]->[Проверка на стаусы и нахождения гражданина в другом заявления]	                  var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute(query.Source, "No");    	E9FC6EB0-8D94-4A86-8FF4-E28BD43A93CE	1	1
B2C36684-19A4-4C3C-8E2F-A07E2AC79A2B	[КОН]->[Процессы расчета КОН]->[Базовый расчет КОН]->{KON Calculate}	;              // var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);              var query = sqlQueryBuilder.Build(q	CCC2209E-C712-47A1-BF84-E0A07755113B	1	1
2DC844AC-D9A3-4CCD-BFC0-1B88FF5C5DF1	[КОН]->[Процессы расчета КОН]->[Новый расчет КОН]->{KON Calculate}	;              // var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);              var query = sqlQueryBuilder.Build(q	E18C435E-C6DE-4258-9DAD-F4CCB14E3775	1	1
97536FED-A655-4D1C-BCFA-D19CF70321C1	[Пакет документов на АСП]->[Процессы]->[Добавить номера заполненных бланков]->{Скрипт}	omer"]);          var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);          var regSrc = query.JoinSource(query.Sou	8DF0B395-136D-48C5-8ED1-178841E2D388	1	1
0A2D58A7-7DE4-4E0C-8D92-36799202291F	[Пакет документов на АСП]->[Процессы]->[Журнал регистрации ошибок]->{Скрипт}	ext.UserId);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("Value");     using(var 	B9BB0984-E1A7-4C69-B3B8-DD24164C8D80	1	1
863BD1E7-709D-4D4F-AA3B-E5F28412F0B1	[Пакет документов на АСП]->[Процессы]->[Отчет по просроченным пакетам заявлений]->{Скрипт}	omer"]);          var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);          var regSrc = query.JoinSource(query.Sou	5A93709F-0F60-4BE1-A212-68D62AD5F3F1	1	1
83778703-BF81-4BBA-8D44-1B32178DAA79	[Проверки]->[Процесс]->[Зарегистрировать Акт]->{Создание решения и зарегистрировать}	).Eq(appId);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("&Id");      using(var r	2FAE0051-0CF7-42DA-8376-CB522E7A65CF	1	1
7263FFC3-9620-4B81-B68A-857F1734A27F	[Проверки]->[Процесс]->[Отмена решения о прекращении]->{Скрипт}	).Eq(appId);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("&Id");      using (var 	4FE3BFFB-40D9-4881-A023-DE8A20C5F99F	1	1
9347D11D-BEAA-48C2-BE86-68FE8CE6FA7E	[Проверки]->[Процесс]->[Прекращение дубликатов]->{Скрипт}	).Eq(appId);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("&Id");      using(var r	09868CC6-E07F-42B9-B1C1-6B2506955A1A	1	1
FE222553-C0EF-4248-BB30-811103EF813C	[Проверки]->[Процесс]->[Утверждение решения о включении]->{Внесение изменений в документы}	).Eq(appId);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("&Id");      using (var 	8EA1A826-AAD6-491F-AC41-3871B374F5C2	1	1
4FE84078-96D8-4E20-B0AD-6F5EB622CA67	[Проверки]->[Процесс]->[Утверждение решения о прекращении]->{Внесение соответствующих изменений во все связанные документы}	ilder>();      // var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      var query = sqlQueryBuilder.Build(qb.Def); 	EDE8AD3B-A8ED-466C-B35C-4C49D7FD0804	1	1
2274B7B4-1D3B-4B03-A2E5-BE4706695304	[Проверки]->[Процесс]->[Формирование журнала дубликатов]->{Формирование журнала (члены семьи)}	);        using (var sQuery = SqlQueryBuilder.Build(context.DataContext, appQuery))      {          var personSrc = sQuery.JoinSou	45932BCA-B26B-43DC-93EF-171693F23D80	1	1
52BF4A54-314D-47DE-A00D-7F6F6F60E92F	[Справки]->[Процессы]->[****Справка о выплате пособии на погребение]->[Скрипт]	).Eq(1);          var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("Year");      query.AddA	AA6D16ED-92F6-49F0-862A-8CA2B298D5F3	1	1
426E277F-2890-4322-A485-E6284FD8CE16	[Справки]->[Процессы]->[Печать справки о выплате пособии на погребение]->[Скрипт]	           using (var query = SqlQueryBuilder.Build(context.DataContext, qb.Def))          {                var infoDeadSrc = quer	55FEABE4-FB4B-4683-88D5-238FAC63FBF8	1	1
5753BDE7-C211-4DB2-903B-D2E06E6D2859	[Справки]->[Процессы]->[Печать справки о переназначении другому члену семьи после смерти главы домохозяйства]->{Скрипт}	;          using (var query = SqlQueryBuilder.Build(context.DataContext, qb.Def))          {                                      	71171E2C-C738-45BD-BE6E-CB5AF985EC84	1	1
9C524B6A-E54C-46A0-B38C-17E8147632BB	[Справки]->[Процессы]->[Печать справки о статусе малообеспеченной семьи]->{Формирование запроса}	;          using (var query = SqlQueryBuilder.Build(context.DataContext, qb.Def))          {                 var appSrc = query.Jo	98B1074D-331B-450D-B982-94DF6A4D0E76	1	1
CC439704-F9E9-497F-9327-F481577D9F1B	[Справки]->[Процессы]->[Справка о выплате пособии на погребение]->[Формирование запрос]	infoDeadId);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("&Id");      using(var r	F310086A-3F1F-492F-B8BA-1B3DF99F8F84	1	1
E3651892-DF31-4484-A4B0-FD4E0253F275	[Справки]->[Процессы]->[Справка о переназначении другому члену семьи после смерти главы домохозяйства]->{Скрипт}	).Eq(appId);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("Account_No");      usin	0DC22E4C-A750-4A29-B6C8-A1B96ACB768F	1	1
2A5ACC5A-AD0B-4857-86FA-33F0E461DEC7	[Справки]->[Процессы]->[Справка о статусе малообеспеченной семьи]->{Скрипт}	).Eq(1);          var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("Year");      query.AddA	300FD9F0-2285-4A56-83B6-89141DE2404B	1	1
BC61F0CD-0293-4752-96F5-538604F06C2A	[Уведомления]->[Процессы печати]->[Печать уведомления о назначении]->{Запрос уведомления о назначении}	.Eq(app.Id);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttributes(new[] { "Month", "Year"	85BF71BE-B94B-43CD-AEAB-47EE1565C524	1	1
E851FDEB-C8DB-4EBF-BBF0-4B2D26592433	[Уведомления]->[Процессы печати]->[Печать уведомления о переназначении]->{Скрипт}	.Eq(app.Id);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttributes(new[] { "Month", "Year"	FCB7BE30-EC57-4109-929B-C3C9FCBD7489	1	1
AD24737E-80C2-4EBA-BA76-3DD9F4D096B9	[Уведомления]->[Процессы печати]->[Сформировать список уведомлений о прекращении с возвратом]->{Скрипт}	d();              var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);              var decTermSrc = query.JoinSource(q	EEC978D8-D872-45E9-8C04-B744261ADB90	1	1
F4039D12-34E3-4A13-AE93-FC3A3B890257	[Уведомления]->[Процессы печати]->[Сформировать список уведомлений о прекращении с возвратом]->{Формирование запроса}	  }              var query2 = SqlQueryBuilder.Build(context.DataContext, qb.Def);              solutionSrc = query2.JoinSource(que	7E4C6E13-DBDA-42C7-86ED-7E142FBB3EF2	1	1
647D64B5-D9F1-4AF0-9599-93FA13AD8063	[Уведомления]->[Процессы печати]->[Сформировать список уведомлений об остатке на банковском счете]->{Формирование запроса}	        //using (var query2 = SqlQueryBuilder.Build(context.DataContext, new QueryBuilder(NoticeBalanceInBankDefId, context.UserId	48A2F8A3-45BE-444D-AEA0-4AE4AC3CE1F3	1	1
9F4BEA39-A023-4EC9-8714-080C7B019BA2	[Уведомления]->[Процессы печати]->[Сформировать список уведомлений об отказе]->{Скрипт}	d();              var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);              var appSrc = query.JoinSource(query	ACE48E91-50EA-4FC0-BFD1-868C01E76581	1	1
30A9A1BB-9FC5-4142-B419-72FCBFAD19F0	[Уведомления]->[Процессы печати]->[Сформировать уведомление о включении в программу АСП]->{Скрипт}	d();              var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);              //var decTermSrc = query.JoinSource	D93C91D2-997F-4CA7-AB82-13EC1ADB048B	1	1
0131C960-67B4-4C53-A544-276D206F818E	[Финансовая отчетность]->[Процессы]->[Выплаченные, депонированные пособия]->{Скрипт}	           using (var query = SqlQueryBuilder.Build(context.DataContext, qb.Def))          {              var bankAccountSrc = que	1A450C65-9C1D-4CAF-A812-E1765363BD31	1	1
CC910E49-874C-41DD-B4CA-16ED963EDFAC	[Финансовая отчетность]->[Процессы]->[Использование бюджетных средств (ф.24)]->{Выполнить запрос}	           using (var query = SqlQueryBuilder.Build(context.DataContext, qb.Def))          {                                      	816B634F-C33F-4CD5-B63E-12506881807B	1	1
BEBEF6FD-7470-42FD-ADA2-10A42DD8081B	[Финансовая отчетность]->[Процессы]->[Использование бюджетных средств по месяцам (ф.23)]->{Выполнить запрос}	           using (var query = SqlQueryBuilder.Build(context.DataContext, qb.Def))          {                                      	D0A8B7C0-52E8-4D43-9E5E-40F0134D2FA4	1	1
DA1E6C67-74EC-4324-A9E8-C4A366011868	[Финансовая отчетность]->[Процессы]->[Количество не присужденных заявлений]->{Скрипт}	;          using (var query = SqlQueryBuilder.Build(context.DataContext, qb.Def))          {              var appStateSource = que	95D3E6AD-07AD-46EB-981F-CBF0A73805ED	1	1
42CB0307-5F19-4304-A450-953D751DE434	[Финансовая отчетность]->[Процессы]->[Количество присужденных заявлений]->{Скрипт}	;          using (var query = SqlQueryBuilder.Build(context.DataContext, qb.Def))          {              var appStateSource = que	BA17BA21-509B-436E-84C2-A81CE9C423BA	1	1
692BF9AB-29DA-436A-B6D5-DF5E8C7F8713	[Финансовая отчетность]->[Процессы]->[Отчет о верификации]->{Отчет о верификации}	;          using (var query = SqlQueryBuilder.Build(context.DataContext, qb.Def))          {                                      	575C4E81-4D8F-4908-8A84-16B55BC3D8C0	1	1
CB463DB9-D0E6-4C52-8CF1-E322C1216444	[Финансовая отчетность]->[Процессы]->[Процесс выгрузки 1 выплаты]->{Скрипт}	Id);              var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);                            var assignSrc = query	6A9BC3CB-8C86-4727-B3B6-C6E8944DD6E7	1	1
E3D18EAF-A007-4DFC-9942-F65AD062BB8A	[Финансовая отчетность]->[Процессы]->[Процесс выгрузки 2 выплаты]->{Скрипт}	Id);              var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);                            var assignSrc = query	B4E2534F-D755-43F8-9397-A84532974957	1	1
166826E0-5530-4980-AA3F-01563E9FA69F	[Финансовая отчетность]->[Процессы]->[Процесс выгрузки 3 выплаты]->{Скрипт}	Id);              var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);                            var assignSrc = query	7180A151-A04B-4EA7-8F59-D9608FCB5D6B	1	1
CB01C74C-36C9-4EC5-B632-DE76A2EEAFDA	[Финансовая отчетность]->[Процессы]->[Процесс выгрузки 4 выплаты]->{Скрипт}	Id);              var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);                            var assignSrc = query	A3577878-741F-4A06-AE68-FA107D618E7C	1	1