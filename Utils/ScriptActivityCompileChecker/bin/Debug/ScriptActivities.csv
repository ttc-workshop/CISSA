9114018B-617B-4D1B-84AF-C9B20C5DECD4	Сформировать список уведомлений о депонировании
D6BC205D-1D10-4849-9AA8-925EAC8CD768	Завершение заявлений
0E8A7305-0D2E-4385-907F-3AFBB548FE08	Скрипт	NULL	NULL	ext.UserId);      var query = sqlQueryBuilder.Build(paymentDefId);      query.AndCondition("BankAccount", ConditionOperation.Equal	[Взаимодействие с банком]->[Процессы]->[Загрузка б.отчета об оборотах д.средств]	B45ED0AB-EAC7-47E0-A41B-3920A4CCE511
566E07BE-E5B7-47A6-B826-6EA322DBEC52	Скрипт	NULL	NULL	ext.UserId);      var query = sqlQueryBuilder.Build(bankAccountDefId);      query.AndCondition("Application", ConditionOperation.E	[Взаимодействие с банком]->[Процессы]->[Загрузка б.отчета об оборотах д.средств]	B45ED0AB-EAC7-47E0-A41B-3920A4CCE511
AEB1C030-67FA-4496-B9B9-C1DF1E7CDE6C	формирование уведомлений	NULL	NULL	nd").Gt(0m);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      var bAccountSrc = query.JoinSource(query.So	[Взаимодействие с банком]->[Процессы]->[Загрузка б.отчета об оборотах д.средств]	B45ED0AB-EAC7-47E0-A41B-3920A4CCE511
80FE042B-AB78-4D85-B3C1-A8C6CD69F130	Считывание банковских счетов	NULL	NULL	                  var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);          query.AddAttribute("Activity");        	[Взаимодействие с банком]->[Процессы]->[Загрузка банковских номеров]	828947AE-44B6-4ECE-ADE3-E6DFA63D3FE0
4E01E236-5559-4558-9463-B1236CD8BD97	Скрипт	NULL	NULL	Id);              var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);              var bankAccountSrc = query.JoinSour	[Выплаты АСП]->[Процессы]->	BE20C3C7-6986-4AD6-A5E4-0B06516694E8
6AA21A2E-4FA9-4885-8B76-49CAB535E06B	Скрипт	NULL	NULL	Id);              var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);                            /*var notTermSrc = qu	[Выплаты АСП]->[Процессы]->[***Печать банковского реестра на прекращение выплат]	9A8C0BB4-8763-46AA-9B26-38385D7E65D3
564928EC-5D5D-4E15-A6DC-F3DFEF749088	Скрипт	***	NULL	Id);              var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);                                                 	[Выплаты АСП]->[Процессы]->[Выгрузка реестра о переназначении в Excel]	5B476031-25B9-4125-AA9C-3EEFE264FCB6
4F137F29-7B53-4B69-89E2-399E81558E36	Проверка	NULL	NULL	rId);      using (var query = sqlQueryBuilder.Build(paymentDefId))      {          query.AndCondition("BankAccount", ConditionOper	[Выплаты АСП]->[Процессы]->[Прекращение с возвратом]	D53A2F8E-7DC0-4422-A818-F6775B927314
823A9D65-2426-479D-9D4F-E929BBE50BC0	Расчитать результат к возврату и внести соответствующие изменения в документы	NULL	NULL	;          using (var query = sqlQueryBuilder.Build(paymentDefId))          {              var assignSrc = query.JoinSource(query.	[Выплаты АСП]->[Процессы]->[Прекращение с возвратом]	D53A2F8E-7DC0-4422-A818-F6775B927314
A4DC6E37-31A5-4FBB-8573-BE10FF51CE25	old	NULL	NULL	           using (var query = SqlQueryBuilder.Build(context.DataContext, context.CurrentQuery))      {          query.AddAttribute	[Выплаты АСП]->[Процессы]->[Реестр на оплату]->[Формирование реестра на оплату]	3B6140F7-A8F0-484C-ABA2-1F77A583967E
DB4789C3-7AE1-4677-9EF6-B43E37961353	Формирование запроса	NULL	NULL	           using (var query = SqlQueryBuilder.Build(context.DataContext, context.CurrentQuery))      {                            	[Выплаты АСП]->[Процессы]->[Формирование реестра о переназначении]	A458C328-EDF2-47EB-A026-D94E662AC221
1E058E3D-A879-417A-ACB2-969F895ACE52	Скрипт СТАР	NULL	NULL	           using (var query = SqlQueryBuilder.Build(context.DataContext, context.CurrentQuery))      {          var notTermSrc = q	[Выплаты АСП]->[Процессы]->[Формирование реестра о прекращении с возвратом]	9CF3F6B1-CDBC-47EA-949C-47104AF8B4C3
4E094E67-47A9-4683-AB31-415AE515FC86	Прекращение	NULL	NULL	).Eq(appId);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("&Id");      using(var r	[Заявление на АСП]->[Процессы]->[***Создание умершего человека]	DF0270AF-A5CF-4B20-A1F6-5711C1962CA2
DB614159-54AB-4390-8846-ADF69BB7F7CB	проверка на остаток выплат	NULL	NULL	Date).End();      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("BalanceEnd");      quer	[Заявление на АСП]->[Процессы]->[***Создание умершего человека]	DF0270AF-A5CF-4B20-A1F6-5711C1962CA2
1F0340ED-2AE2-4B69-8D5C-B7C74B3FA9F0	поиск заявлений	NULL	NULL	LL") <= 222;      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      var appstatesrc = query.JoinSource(query.So	[Заявление на АСП]->[Процессы]->[***Создание умершего человека]	DF0270AF-A5CF-4B20-A1F6-5711C1962CA2
E58A7803-75EE-434E-951E-A86BB602AEC5	Скрипт	NULL	NULL	yBuilder>();      var query = sqlQueryBuilder.Build(/*context.DataContext,*/ qb.Def);      query.AddAttribute("&Id");      var tab	[Заявление на АСП]->[Процессы]->[Верификация]->[Отчет по ходу выполнения планов проверки]	D670CBC5-4F89-4891-BA1C-C4D001863023
3CF0EA52-81F6-4E30-B668-EBC0C228837B	NULL	Скрипт	NULL	ext.CreateSqlQuery(qb.Def)) //SqlQueryBuilder.Build(context.DataContext, qb.Def);      {          query.AddAttribute("Value");    	[Заявление на АСП]->[Процессы]->[Верификация]->[Сформировать список заявлений для верификации]	41E4F4B6-6B27-4679-A77F-6E39E7D2618C
0E8A2B3F-CA3A-4A35-89BC-F876388E54E0	Запрос на заявления	NULL	NULL	ext.CreateSqlQuery(qb.Def)) //SqlQueryBuilder.Build(context.DataContext, qb.Def);              {                  query.AddAttribu	[Заявление на АСП]->[Процессы]->[Верификация]->[Сформировать список заявлений для верификации]	41E4F4B6-6B27-4679-A77F-6E39E7D2618C
DDA2D6DE-433B-47E0-AE81-5EDF73540633	Скрипт	NULL	NULL	lder>();          var query = sqlQueryBuilder.Build(qb.Def);          var indicatorTypeSrc = query.JoinSource(query.Source, typeOf	[Заявление на АСП]->[Процессы]->[Выписка КОН]	DA209359-8A77-4AD0-A19F-4DC14A8B82A3
422029F6-4D3C-4002-8625-4E60BB227553	NULL	Скрипт	NULL	infoDeadId);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("&Id");             usin	[Заявление на АСП]->[Процессы]->[Добавить члена домохозяйства]	BAB5331D-A3F8-4748-B17F-F282B2D623BF
353F6324-4BFE-48A2-A571-DE0A4FB407B8	Выборка дел	NULL	NULL	yBuilder>();      var query = sqlQueryBuilder.Build(/*context.DataContext,*/ qb.Def);      query.AddAttribute("&Id");      using(v	[Заявление на АСП]->[Процессы]->[Зарегистрировать умершего]	BA57A282-0A75-4753-B2ED-DFD69EC47F42
E87568FD-6186-4B7C-B85A-E2CD9D663848	Установка результата	NULL	NULL	ext.UserId);      var query = sqlQueryBuilder.Build(bankAccountDefId);      query.AndCondition("Application", ConditionOperation.E	[Заявление на АСП]->[Процессы]->[Зарегистрировать умершего]	BA57A282-0A75-4753-B2ED-DFD69EC47F42
380B6947-829D-48CF-91E7-4FB3C007E204	NULL	Поиск заявлений	NULL	ext)).End();      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      var appstatesrc = query.JoinSource(query.So	[Заявление на АСП]->[Процессы]->[Создание умершего человека]	11966693-234C-43DF-B674-ACFD7A73352A
39AA7195-076D-4074-ADE0-DE7A70C34D33	NULL	Проверка на остаток выплаты	NULL	Date).End();      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("BalanceEnd");      quer	[Заявление на АСП]->[Процессы]->[Создание умершего человека]	11966693-234C-43DF-B674-ACFD7A73352A
695B2612-037D-4B38-9771-E5C0BB9A5241	Прекращение	NULL	NULL	).Eq(appId);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("&Id");      using(var r	[Заявление на АСП]->[Процессы]->[Создание умершего человека]	11966693-234C-43DF-B674-ACFD7A73352A
63BA7AD9-DF26-42F4-B9D3-08AEAE8BE3EE	NULL	Проверка на стаусы и нахождения гражданина в другом заявления	NULL	                  var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute(query.Source, "No");    	[Заявление на АСП]->[Процессы]->[Создать заявление]	E9FC6EB0-8D94-4A86-8FF4-E28BD43A93CE
B2C36684-19A4-4C3C-8E2F-A07E2AC79A2B	KON Calculate	NULL	NULL	;              // var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);              var query = sqlQueryBuilder.Build(q	[КОН]->[Процессы расчета КОН]->[Базовый расчет КОН]	CCC2209E-C712-47A1-BF84-E0A07755113B
2DC844AC-D9A3-4CCD-BFC0-1B88FF5C5DF1	KON Calculate	NULL	NULL	;              // var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);              var query = sqlQueryBuilder.Build(q	[КОН]->[Процессы расчета КОН]->[Новый расчет КОН]	E18C435E-C6DE-4258-9DAD-F4CCB14E3775
97536FED-A655-4D1C-BCFA-D19CF70321C1	Скрипт	NULL	NULL	omer"]);          var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);          var regSrc = query.JoinSource(query.Sou	[Пакет документов на АСП]->[Процессы]->[Добавить номера заполненных бланков]	8DF0B395-136D-48C5-8ED1-178841E2D388
0A2D58A7-7DE4-4E0C-8D92-36799202291F	Скрипт	NULL	NULL	ext.UserId);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("Value");     using(var 	[Пакет документов на АСП]->[Процессы]->[Журнал регистрации ошибок]	B9BB0984-E1A7-4C69-B3B8-DD24164C8D80
752E06F4-3B6E-4E1F-A7A1-BDDE2F358C14	Скрипт	NULL	NULL	lder>();          var query = sqlQueryBuilder.Build(ErrorLogDefId);          //var query = new SqlQuery(context.DataContext, BankA	[Пакет документов на АСП]->[Процессы]->[Отчет по просроченным пакетам заявлений]	5A93709F-0F60-4BE1-A212-68D62AD5F3F1
863BD1E7-709D-4D4F-AA3B-E5F28412F0B1	Скрипт	NULL	NULL	omer"]);          var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);          var regSrc = query.JoinSource(query.Sou	[Пакет документов на АСП]->[Процессы]->[Отчет по просроченным пакетам заявлений]	5A93709F-0F60-4BE1-A212-68D62AD5F3F1
83778703-BF81-4BBA-8D44-1B32178DAA79	Создание решения и зарегистрировать	NULL	NULL	).Eq(appId);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("&Id");      using(var r	[Проверки]->[Процесс]->[Зарегистрировать Акт]	2FAE0051-0CF7-42DA-8376-CB522E7A65CF
7263FFC3-9620-4B81-B68A-857F1734A27F	Скрипт	NULL	NULL	).Eq(appId);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("&Id");      using (var 	[Проверки]->[Процесс]->[Отмена решения о прекращении]	4FE3BFFB-40D9-4881-A023-DE8A20C5F99F
9347D11D-BEAA-48C2-BE86-68FE8CE6FA7E	Скрипт	NULL	NULL	).Eq(appId);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("&Id");      using(var r	[Проверки]->[Процесс]->[Прекращение дубликатов]	09868CC6-E07F-42B9-B1C1-6B2506955A1A
FE222553-C0EF-4248-BB30-811103EF813C	Внесение изменений в документы	NULL	NULL	).Eq(appId);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("&Id");      using (var 	[Проверки]->[Процесс]->[Утверждение решения о включении]	8EA1A826-AAD6-491F-AC41-3871B374F5C2
4FE84078-96D8-4E20-B0AD-6F5EB622CA67	Внесение соответствующих изменений во все связанные документы	NULL	NULL	ilder>();      // var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      var query = sqlQueryBuilder.Build(qb.Def); 	[Проверки]->[Процесс]->[Утверждение решения о прекращении]	EDE8AD3B-A8ED-466C-B35C-4C49D7FD0804
DEB58A23-F1AD-45BB-9E79-C964493F2430	Скрипт	NULL	NULL	yBuilder>();      var query = sqlQueryBuilder.Build(paymentDefId);      // var query = new SqlQuery(context.DataContext, paymentDe	[Проверки]->[Процесс]->[Утверждение решения о прекращении]	EDE8AD3B-A8ED-466C-B35C-4C49D7FD0804
2274B7B4-1D3B-4B03-A2E5-BE4706695304	Формирование журнала (члены семьи)	NULL	NULL	);        using (var sQuery = SqlQueryBuilder.Build(context.DataContext, appQuery))      {          var personSrc = sQuery.JoinSou	[Проверки]->[Процесс]->[Формирование журнала дубликатов]	45932BCA-B26B-43DC-93EF-171693F23D80
09D82D8B-AD43-42FE-85F8-EF5C56595289	Формирование журнала	NULL	NULL	);        using (var sQuery = SqlQueryBuilder.Build(context.DataContext, appQuery))      {          var personSrc = sQuery.JoinSou	[Проверки]->[Процесс]->[Формирование журнала дубликатов]	45932BCA-B26B-43DC-93EF-171693F23D80
C33C4B91-54BE-4AAA-A84B-636313B7CD5F	Проверка корректности и уникальности	NULL	NULL	           using (var query = sqlQueryBuilder.Build(qb.Def))              {                  query.AddAttribute(query.Source, "IIN	[Сведения о гражданине]->[Процессы]->[Новый поиск гражданина]	C1B646DD-BD09-42C9-8D5E-EB7653D71A6C
ABA48CEE-06F1-4867-B0AC-A00AAC7626A1	Скрипт	NULL	NULL	r>();      using (var query = sqlQueryBuilder.Build(qb.Def))      {          using (var reader = new SqlQueryReader(context.DataCo	[Системные объекты]->[Процессы]->[Добавить область видимости организации]	ABAE5C59-4CBD-4192-B7CF-9CB27AC210D7
5A6F5B56-AB96-4FE3-BA70-9BA93A253628	Скрипт	NULL	NULL	r>();      using (var query = sqlQueryBuilder.Build(qb.Def))            {          using (var reader = new SqlQueryReader(context.	[Системные объекты]->[Процессы]->[Добавить область видимости пользователя]	1E0BF5A1-774B-4070-B050-25FE090107F1
EC254CB3-4D39-4D35-935D-7AB5024A18E6	Скрипт олд	NULL	NULL	ext.UserId);      var query = sqlQueryBuilder.Build(infoDeadPersonDefId);      query.AndCondition("Applications", ConditionOperati	[Справки]->[Процессы]->[****Справка о выплате пособии на погребение]	AA6D16ED-92F6-49F0-862A-8CA2B298D5F3
52BF4A54-314D-47DE-A00D-7F6F6F60E92F	NULL	Скрипт	NULL	ext.UserId);      var query = sqlQueryBuilder.Build(infoDeadPersonDefId);      query.AndCondition("Applications", ConditionOperati	[Справки]->[Процессы]->[****Справка о выплате пособии на погребение]	AA6D16ED-92F6-49F0-862A-8CA2B298D5F3
55B164C9-9D5B-45FF-A587-1D09D3C0571C	Формирование запроса	NULL	NULL	;          using (var query = SqlQueryBuilder.Build(context.DataContext, qb.Def))          {                                      	[Справки]->[Процессы]->[Печать справки о выплате пособии на погребение]	55FEABE4-FB4B-4683-88D5-238FAC63FBF8
426E277F-2890-4322-A485-E6284FD8CE16	NULL	Скрипт	NULL	           using (var query = SqlQueryBuilder.Build(context.DataContext, qb.Def))          {                var infoDeadSrc = quer	[Справки]->[Процессы]->[Печать справки о выплате пособии на погребение]	55FEABE4-FB4B-4683-88D5-238FAC63FBF8
5753BDE7-C211-4DB2-903B-D2E06E6D2859	Скрипт	NULL	NULL	;          using (var query = SqlQueryBuilder.Build(context.DataContext, qb.Def))          {                                      	[Справки]->[Процессы]->[Печать справки о переназначении другому члену семьи после смерти главы домохозяйства]	71171E2C-C738-45BD-BE6E-CB5AF985EC84
9C524B6A-E54C-46A0-B38C-17E8147632BB	Формирование запроса	NULL	NULL	;          using (var query = SqlQueryBuilder.Build(context.DataContext, qb.Def))          {                 var appSrc = query.Jo	[Справки]->[Процессы]->[Печать справки о статусе малообеспеченной семьи]	98B1074D-331B-450D-B982-94DF6A4D0E76
6295BC62-EE52-4947-8F09-09B9EDAE8ACB	NULL	Формирование запрос (old)	NULL	ext.UserId);      var query = sqlQueryBuilder.Build(infoDeadPersonDefId);      query.AndCondition("Applications", ConditionOperati	[Справки]->[Процессы]->[Справка о выплате пособии на погребение]	F310086A-3F1F-492F-B8BA-1B3DF99F8F84
CC439704-F9E9-497F-9327-F481577D9F1B	NULL	Формирование запрос	NULL	infoDeadId);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("&Id");      using(var r	[Справки]->[Процессы]->[Справка о выплате пособии на погребение]	F310086A-3F1F-492F-B8BA-1B3DF99F8F84
E3651892-DF31-4484-A4B0-FD4E0253F275	Скрипт	NULL	NULL	).Eq(appId);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("Account_No");      usin	[Справки]->[Процессы]->[Справка о переназначении другому члену семьи после смерти главы домохозяйства]	0DC22E4C-A750-4A29-B6C8-A1B96ACB768F
2A5ACC5A-AD0B-4857-86FA-33F0E461DEC7	Скрипт	NULL	NULL	).Eq(1);          var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttribute("Year");      query.AddA	[Справки]->[Процессы]->[Справка о статусе малообеспеченной семьи]	300FD9F0-2285-4A56-83B6-89141DE2404B
BC61F0CD-0293-4752-96F5-538604F06C2A	Запрос уведомления о назначении	NULL	NULL	.Eq(app.Id);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttributes(new[] { "Month", "Year"	[Уведомления]->[Процессы печати]->[Печать уведомления о назначении]	85BF71BE-B94B-43CD-AEAB-47EE1565C524
E851FDEB-C8DB-4EBF-BBF0-4B2D26592433	Скрипт	NULL	NULL	.Eq(app.Id);      var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);      query.AddAttributes(new[] { "Month", "Year"	[Уведомления]->[Процессы печати]->[Печать уведомления о переназначении]	FCB7BE30-EC57-4109-929B-C3C9FCBD7489
9114018B-617B-4D1B-84AF-C9B20C5DECD4	Уведомление о депонировании	NULL	NULL	          using (var query2 = SqlQueryBuilder.Build(context.DataContext, new QueryBuilder(NoticeofDepositofAmountDefId, context.Us	[Уведомления]->[Процессы печати]->[Сформировать список уведомлений о депонировании]	2D6839E7-C478-4B38-91E3-425617642882
F4039D12-34E3-4A13-AE93-FC3A3B890257	Формирование запроса	NULL	NULL	  }              var query2 = SqlQueryBuilder.Build(context.DataContext, qb.Def);              solutionSrc = query2.JoinSource(que	[Уведомления]->[Процессы печати]->[Сформировать список уведомлений о прекращении с возвратом]	7E4C6E13-DBDA-42C7-86ED-7E142FBB3EF2
AD24737E-80C2-4EBA-BA76-3DD9F4D096B9	Скрипт	NULL	NULL	d();              var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);              var decTermSrc = query.JoinSource(q	[Уведомления]->[Процессы печати]->[Сформировать список уведомлений о прекращении с возвратом]	EEC978D8-D872-45E9-8C04-B744261ADB90
647D64B5-D9F1-4AF0-9599-93FA13AD8063	Формирование запроса	NULL	NULL	        //using (var query2 = SqlQueryBuilder.Build(context.DataContext, new QueryBuilder(NoticeBalanceInBankDefId, context.UserId	[Уведомления]->[Процессы печати]->[Сформировать список уведомлений об остатке на банковском счете]	48A2F8A3-45BE-444D-AEA0-4AE4AC3CE1F3
9F4BEA39-A023-4EC9-8714-080C7B019BA2	Скрипт	NULL	NULL	d();              var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);              var appSrc = query.JoinSource(query	[Уведомления]->[Процессы печати]->[Сформировать список уведомлений об отказе]	ACE48E91-50EA-4FC0-BFD1-868C01E76581
30A9A1BB-9FC5-4142-B419-72FCBFAD19F0	Скрипт	NULL	NULL	d();              var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);              //var decTermSrc = query.JoinSource	[Уведомления]->[Процессы печати]->[Сформировать уведомление о включении в программу АСП]	D93C91D2-997F-4CA7-AB82-13EC1ADB048B
8F6F39B3-7540-4BEB-9BA3-B1AB08D79E18	БО	NULL	NULL	           using (var query = sqlQueryBuilder.Build(qb.Def))          {                                                           	[Финансовая отчетность]->[Процессы]->[Банковский отчет]	B82FAB27-C438-4134-930B-A35684614B61
0131C960-67B4-4C53-A544-276D206F818E	Скрипт	NULL	NULL	           using (var query = SqlQueryBuilder.Build(context.DataContext, qb.Def))          {              var bankAccountSrc = que	[Финансовая отчетность]->[Процессы]->[Выплаченные, депонированные пособия]	1A450C65-9C1D-4CAF-A812-E1765363BD31
CC910E49-874C-41DD-B4CA-16ED963EDFAC	Выполнить запрос	NULL	NULL	           using (var query = SqlQueryBuilder.Build(context.DataContext, qb.Def))          {                                      	[Финансовая отчетность]->[Процессы]->[Использование бюджетных средств (ф.24)]	816B634F-C33F-4CD5-B63E-12506881807B
BEBEF6FD-7470-42FD-ADA2-10A42DD8081B	Выполнить запрос	NULL	NULL	           using (var query = SqlQueryBuilder.Build(context.DataContext, qb.Def))          {                                      	[Финансовая отчетность]->[Процессы]->[Использование бюджетных средств по месяцам (ф.23)]	D0A8B7C0-52E8-4D43-9E5E-40F0134D2FA4
4062C67A-4BEF-4531-8917-B8FECBFF2DFA	Скрипт114	NULL	NULL	UserId);          var query = sqlQueryBuilder.Build(ComplaintDefId);          var userSrc = query.JoinSource(query.Source, For_off	[Финансовая отчетность]->[Процессы]->[Кол-во поданных и рассмотренных жалоб и аппеляций]	D5673ACE-53FF-46F2-84D4-974AE0F75060
DA1E6C67-74EC-4324-A9E8-C4A366011868	Скрипт	NULL	NULL	;          using (var query = SqlQueryBuilder.Build(context.DataContext, qb.Def))          {              var appStateSource = que	[Финансовая отчетность]->[Процессы]->[Количество не присужденных заявлений]	95D3E6AD-07AD-46EB-981F-CBF0A73805ED
42CB0307-5F19-4304-A450-953D751DE434	Скрипт	NULL	NULL	;          using (var query = SqlQueryBuilder.Build(context.DataContext, qb.Def))          {              var appStateSource = que	[Финансовая отчетность]->[Процессы]->[Количество присужденных заявлений]	BA17BA21-509B-436E-84C2-A81CE9C423BA
692BF9AB-29DA-436A-B6D5-DF5E8C7F8713	Отчет о верификации	NULL	NULL	;          using (var query = SqlQueryBuilder.Build(context.DataContext, qb.Def))          {                                      	[Финансовая отчетность]->[Процессы]->[Отчет о верификации]	575C4E81-4D8F-4908-8A84-16B55BC3D8C0
CB463DB9-D0E6-4C52-8CF1-E322C1216444	Скрипт	NULL	NULL	Id);              var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);                            var assignSrc = query	[Финансовая отчетность]->[Процессы]->[Процесс выгрузки 1 выплаты]	6A9BC3CB-8C86-4727-B3B6-C6E8944DD6E7
E3D18EAF-A007-4DFC-9942-F65AD062BB8A	Скрипт	NULL	NULL	Id);              var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);                            var assignSrc = query	[Финансовая отчетность]->[Процессы]->[Процесс выгрузки 2 выплаты]	B4E2534F-D755-43F8-9397-A84532974957
166826E0-5530-4980-AA3F-01563E9FA69F	Скрипт	NULL	NULL	Id);              var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);                            var assignSrc = query	[Финансовая отчетность]->[Процессы]->[Процесс выгрузки 3 выплаты]	7180A151-A04B-4EA7-8F59-D9608FCB5D6B
CB01C74C-36C9-4EC5-B632-DE76A2EEAFDA	Скрипт	NULL	NULL	Id);              var query = SqlQueryBuilder.Build(context.DataContext, qb.Def);                            var assignSrc = query	[Финансовая отчетность]->[Процессы]->[Процесс выгрузки 4 выплаты]	A3577878-741F-4A06-AE68-FA107D618E7C
DDA2FE1D-4DD6-4783-B8D4-77AC3E5133FB	Сведения о получателях АСП	NULL	NULL	lder>();          var query = sqlQueryBuilder.Build(qb.Def);          var appStateSrc = query.JoinSource(query.Source, AppStateDef	[Финансовая отчетность]->[Процессы]->[Сведения о получателях АСП на текщий момент]	FF2A467D-F3AC-48D7-89CD-2A54BC2C69E2